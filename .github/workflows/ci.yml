# name: FastAPI Docker Test with MySQL

# on:
#   push:
#     branches: [ "main", "feature/**" ]
#   pull_request:
#     branches: [ "main" ]

# jobs:
#   test-with-docker:
#     name: Run Tests with MySQL
#     runs-on: ubuntu-latest
#     services:
#       mysql:
#         image: mysql:8.0
#         env:
#           MYSQL_ROOT_PASSWORD: root
#           MYSQL_DATABASE: test_db
#           MYSQL_USER: test_user
#           MYSQL_PASSWORD: test_password
#         ports:
#           - 3306:3306
#         volumes:
#           - ./sql_scripts:/docker-entrypoint-initdb.d  # 挂载 SQL 脚本
#         options: >-
#           --health-cmd "mysqladmin ping -h localhost"
#           --health-interval 10s
#           --health-timeout 5s
#           --health-retries 5
#           --tmpfs /var/lib/mysql

#     steps:
#       - name: Checkout code
#         uses: actions/checkout@v3

#       - name: Set up Python
#         uses: actions/setup-python@v4
#         with:
#           python-version: 3.11

#       - name: Install dependencies
#         run: |
#           python -m pip install --upgrade pip
#           pip install -r requirements.txt

#       - name: Build FastAPI Docker image
#         run: docker build -t fastapi-app:latest .

#       - name: Start FastAPI service container
#         run: |
#           docker run -d \
#           --name dogex-griver \
#           --network bridge \
#           --env-file .env \
#           --publish 10104:8000 \
#           --memory 1G \
#           fastapi-app:latest uvicorn app.main:app --host 0.0.0.0 --port 8000 --log-level info

#       # - name: Wait for services to be ready
#       #   run: |
#       #     timeout 30s bash -c 'until curl -s http://localhost:10104/health; do sleep 2; done'

#       - name: Verify database initialization
#         run: |
#           echo "Checking database tables:"
#           docker exec mysql mysql -utest_user -ptest_password -Dtest_db -e "SHOW TABLES;"
          
#           echo "Checking sample data:"
#           docker exec mysql mysql -utest_user -ptest_password -Dtest_db -e "SELECT * FROM users;"

#       - name: Run tests
#         env:
#           DATABASE_URL: mysql+pymysql://test_user:test_password@localhost:3306/test_db
#         run: |
#           pytest tests/ -v --cov=app --cov-report=xml

#       # - name: Upload coverage report
#       #   uses: codecov/codecov-action@v3
#       #   with:
#       #     token: ${{ secrets.CODECOV_TOKEN }}  # 可选，用于上传覆盖率报告

#       - name: Clean up
#         run: |
#           docker stop dogex-griver mysql
#           docker rm dogex-griver mysql


name: Test FastAPI with MySQL

on: [push]

jobs:
  test:
    runs-on: ubuntu-latest
    services:
      mysql:
        image: mysql:8.0
        env:
          MYSQL_DATABASE: testdb
          MYSQL_USER: test
          MYSQL_PASSWORD: testpassword
          MYSQL_ROOT_PASSWORD: rootpassword
        ports:
          - 3306:3306
        options: --health-cmd="mysqladmin ping" --health-interval=10s --health-timeout=5s --health-retries=3

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: 3.9

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Run tests
        run: pytest tests/
        env:
          DATABASE_URL: mysql+pymysql://test:testpassword@localhost:3306/testdb  